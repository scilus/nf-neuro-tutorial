profiles {
    docker {
        docker.enabled          = true
        conda.enabled           = false
        singularity.enabled     = false
        podman.enabled          = false
        shifter.enabled         = false
        charliecloud.enabled    = false
        apptainer.enabled       = false
        docker.runOptions       = '-u $(id -u):$(id -g)'
    }
}

manifest {
    name            = 'scilus/nf-neuro-tutorial'
    description     = """nf-neuro-tutorial is a Nextflow pipeline for processing neuroimaging data."""
    version         = '0.1dev'
}

params.input      = false
params.output     = 'result'

params {
    //**Global options**//
    b0_max_threshold                                = 10
    bvalue_tolerance                                = 20

    //**SH fitting**//
    dwi_signal_sh_fit                               = false
    dwi_signal_sh_fit_order                         = 6
    dwi_signal_sh_fit_basis                         = "descoteaux07"
    dwi_signal_sh_fit_shell                         = null

    //**Denoise dwi (dwidenoise in Mrtrix3)**//
    preproc_dwi_run_denoising                       = false
    dwi_denoise_patch_size                          = 7

    //**GIBBS CORRECTION (mrdegibbs in Mrtrix3)**//
    preproc_dwi_run_degibbs                         = false

    //**Topup**//
    topup_eddy_run_topup                            = false
    dwi_topup_config_file                           = "b02b0.cnf"

    //**Eddy**//
    topup_eddy_run_eddy                             = false
    dwi_eddy_executable                             = "eddy_cpu"
    dwi_eddy_restore_slices                         = true

    //**Denoise T1**//
    preproc_t1_run_denoising                        = false
    preproc_t1_run_N4                               = false
    preproc_t1_run_synthbet                         = false
    preproc_t1_run_ants_bet                         = true
    preproc_t1_run_crop                             = true

    //**Resample T1**//
    preproc_t1_run_resampling                       = true
    t1_resample_resolution_mm_iso                   = 1
    t1_resample_interpolation                       = "lin"

    //**Normalize DWI**//
    preproc_dwi_run_N4                              = false
    dwi_n4_density                                  = 1
    dwi_n4_subsampling                              = 2

    //**Resample DWI**//
    preproc_dwi_run_resampling                      = true
    dwi_resample_resolution_mm_iso                  = 1
    dwi_resample_interpolation                      = "lin"

    //**Extract DTI shells using this value as maximum**//
    dti_max_bvalue                                  = 1200
    dti_shells_to_fit                               = null

    //**Extract fODF shells using this value as minimum**//
    fodf_min_bvalue                                 = 700
    fodf_shells_to_fit                              = null

    //**Compute fiber response function (frf)**//
    frf_fa_max_threshold                            = 0.7
    frf_fa_min_threshold                            = 0.5
    frf_min_n_voxels                                = 300
    frf_roi_radius                                  = 20
    frf_value_to_force                              = null

    //**Mean fiber response function (frf)**//
    frf_average_from_data                           = false

    //**Compute fODF metrics**//
    fodf_sh_order                                   = 8
    fodf_sh_basis                                   = "descoteaux07"
    fodf_peaks_absolute_factor                      = 2.0
    fodf_peaks_relative_threshold                   = 0.1
    fodf_peaks_ventricle_max_fa                     = 0.1
    fodf_peaks_ventricle_min_md                     = 0.003

    //**PFT tracking**//
    run_pft                                         = false

    //**Local tracking (LT)**//
    run_local_tracking                              = false
}

process {

    publishDir = { "${params.output}/$meta.id/${task.process.replaceAll(':', '-')}" }

    withName: "IMAGE_RESAMPLE" {
        ext.voxel_size = "${params.t1_resample_resolution_mm_iso}"
    }

    withName: "SEGMENTATION_FSRECONALLCLINICAL" {
        memory = "12G"
    }

    withName: "TRACTOFLOW:PREPROC_DWI.*" {
        memory = "12G"
    }

    withName: "RESAMPLE_DWI" {
        ext.first_suffix = "dwi"
    }

    withName: "RECONST_DTIMETRICS" {
        memory = "12G"
        ext.ad = true
        ext.evecs = true
        ext.evals = true
        ext.fa = true
        ext.ga = true
        ext.rgb = true
        ext.md = true
        ext.rd = true
    }

    withName: "RECONST_FODF" {
        memory = "12G"
        ext.nufo = true
        ext.afd_total = true
        ext.peaks = true
    }

    withName: "TRANSFORM_LABELS.*" {
        ext.interpolation = "MultiLabel"
        ext.output_dtype = "short"
    }

    withName: "TRANSFORM_IMAGE.*" {
        ext.interpolation = "Linear"
        ext.output_dtype = "float"
    }

    withName: "TRANSFORM_MASK.*" {
        ext.interpolation = "NearestNeighbor"
        ext.output_dtype = "char"
    }

    withName: "TRANSFORM_.*_TO_DWI" {
        ext.first_suffix = "to_dwi"
    }

    withName: "CONCATENATE" {
        ext.operation = "concatenate"
        ext.suffix = "concat"
    }

    withName: "TRANSFORM_LABELS_TO_MNI" {
        ext.first_suffix = "labels_to_mni"
    }
    withName: "TRANSFORM_IMAGE_T1_MNI" {
        ext.first_suffix = "t1_mni"
    }
    withName: "TRANSFORM_IMAGE_NUFO_MNI" {
        ext.first_suffix = "nufo_mni"
    }
    withName: "TRANSFORM_IMAGE_FA_MNI" {
        ext.first_suffix = "fa_mni"
    }
    withName: "TRANSFORM_IMAGE_MD_MNI" {
        ext.first_suffix = "md_mni"
    }
    withName: "TRANSFORM_MASK_WM_MNI" {
        ext.first_suffix = "wm_mni"
    }

    withName: "TRANSFORM_TRACTOGRAM_MNI" {
        ext.inverse = true
        ext.suffix = "_mni"
    }

    withName: "TRANSFORM_WMPARC" {
        ext.dimensionality  = 3
        ext.image_type      = 0
        ext.interpolation   = "MultiLabel"
        ext.output_dtype    = "short"
        ext.default_val     = 0
        ext.first_suffix    = "wmparc"
    }

    withName: "TRANSFORM_APARC_ASEG" {
        ext.dimensionality  = 3
        ext.image_type      = 0
        ext.interpolation   = "MultiLabel"
        ext.output_dtype    = "short"
        ext.default_val     = 0
        ext.first_suffix    = "aparc_aseg"
    }

    withName: "VOLUME_MATH_SINGLE" {
        ext.operation = "dilation"
        ext.value = 2
        ext.suffix = "dilated"
    }

    withName: "TRACKING_LOCALTRACKING" {
        ext.local_tracking_mask_type            = "wm"
        ext.local_seeding_mask_type             = "wm"
        ext.local_seeding                       = "npv"
        ext.local_nbr_seeds                     = "10"
        ext.local_algo                          = "prob"
        ext.local_step                          = "0.5"
        ext.local_min_len                       = "20"
        ext.local_max_len                       = "200"
        ext.local_random_seed                   = "1867"
        ext.local_compress_streamlines          = "true"
        ext.local_compress_value                = "0.2"
    }
}
